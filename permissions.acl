/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//=====================================================================================================
/*
 * GENERAL ACCESS CONTROL
 */
//=====================================================================================================
rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}

rule SystemACL {
  description: "Grant access to all Participants to target system registries"
  participant: "org.hyperledger.composer.system.Participant"
  operation: ALL
  resource: "org.hyperledger.composer.system.**"
  action: ALLOW
}

//=====================================================================================================
/*
 * ACCESS CONTROL OF SELLER
 */
//=====================================================================================================
rule SellerSeeUpdateThemselvesOnly {
  description: "seller can see and update their own profile only"
  participant(t): "org.example.cod.Seller"
  operation: READ, UPDATE
  resource(v): "org.example.cod.Seller"
  condition: (v.getIdentifier() == t.getIdentifier())
  action: ALLOW
}

rule SellerIteractToTheirAssetOnly {
  description: "seller only interact with their asset"
  participant(p): "org.example.cod.Seller"
  operation: CREATE, READ, UPDATE
  resource(r): "org.example.cod.Assets"
  condition: (r.seller.getIdentifier() == p.getIdentifier())
  action: ALLOW
}

rule SellerCannotInteractToAssetHash {
  description: "seller don't have permission to interact to asser's hash"
  participant: "org.example.cod.Seller"
  operation: ALL
  resource: "org.example.cod.AssetHash"
  action: DENY
}

rule SellerSeeTheirHistory {
  description: "Seller should be able to see the history of their own transactions only"
  participant(t): "org.example.cod.Seller"
  operation: READ
  resource(v): "org.hyperledger.composer.system.HistorianRecord"
  condition: (v.participantInvoking.getIdentifier() != t.getIdentifier())
  action: DENY
}

rule SellerOnlyAccessToTheirBalance {
  description: "seller only permission to access to their balance"
  participant(p): "org.example.cod.Seller"
  operation: READ, UPDATE
  resource(r): "org.example.cod.SellerBalance"
  condition: (r.owner.getIdentifier() == p.getIdentifier())
  action: ALLOW
}

rule SellerOnlyReadMortgageBalance {
  description: "seller only permission to read mortgage balance"
  participant(p): "org.example.cod.Seller"
  operation: READ, UPDATE, CREATE
  resource(r): "org.example.cod.MortgageBalance"
  condition: (r.seller.getIdentifier() == p.getIdentifier())
  action: ALLOW
}

rule SellerCanAccessToLimitTime {
  description: "seller can read data of limit time"
  participant(p): "org.example.cod.Seller"
  operation: READ, CREATE
  resource(r): "org.example.cod.LimitTime"
  condition: (p.getIdentifier() == r.seller.getIdentifier())
  action: ALLOW
}

rule SellerCanAccessToOrder {
  description: "seller can read data of order"
  participant(p): "org.example.cod.Seller"
  operation: READ
  resource(r): "org.example.cod.Order"
  condition: (p.getIdentifier() == r.seller.getIdentifier())
  action: ALLOW
}

rule SellerCanAccessToPackage {
  description: "seller can read data of order"
  participant(p): "org.example.cod.Seller"
  operation: READ, CREATE
  resource(r): "org.example.cod.Package"
  condition: (p.getIdentifier() == r.seller.getIdentifier())
  action: ALLOW
}
//=====================================================================================================
/*
 * ACCESS CONTROL OF DELIVERY
 */
//=====================================================================================================
rule DeliveryInteratTheirProfileOnly {
  description: "delivery only interact to their profile"
  participant(p): "org.example.cod.DeliveryCompany"
  operation: READ, UPDATE
  resource(r): "org.example.cod.DeliveryCompany"
  condition: (r.getIdentifier() == p.getIdentifier())
  action: ALLOW
}

rule DeliveryOnlyAccesToTheirShipper {
  description: "delivery only acces to their shipper"
  participant(p): "org.example.cod.DeliveryCompany"
  operation: READ, UPDATE, DELETE
  resource(r): "org.example.cod.Shipper"
  condition: (r.company.getIdentifier() == p.getIdentifier())
  action: ALLOW
}

rule DeliveryDontReadAssetDetail {
  description: "delivery cannot access to order"
  participant: "org.example.cod.DeliveryCompany"
  operation: ALL
  resource: "org.example.cod.Order"
  action: DENY
}

rule DeliveryCanAccessAssetHash {
  description: "delivery cannot access to order"
  participant: "org.example.cod.DeliveryCompany"
  operation: READ
  resource: "org.example.cod.AssetHash"
  action: ALLOW
}

rule DeliveryOnlyInteractWithTheirBalance {
  description: "delivery can only interact to their balance"
  participant(p): "org.example.cod.DeliveryCompany"
  operation: READ, UPDATE
  resource(r): "org.example.cod.DeliveryBalance"
  condition: (r.owner.getIdentifier() == p.getIdentifier())
  action: ALLOW
}

rule DeliveryInteractWithMortgageBalance {
  description: "delivery interact to mortgage balance"
  participant(p): "org.example.cod.DeliveryCompany"
  operation: READ, UPDATE
  resource(r): "org.example.cod.MortgageBalance"
  condition: (r.delivery.getIdentifier() == p.getIdentifier())
  action: ALLOW
}

rule DeliverySeeTheirHistorian {
  description: "Delivery should be able to see the history of their own transactions only"
  participant(t): "org.example.cod.DeliveryCompany"
  operation: READ
  resource(v): "org.hyperledger.composer.system.HistorianRecord"
  condition: (v.participantInvoking.getIdentifier() != t.getIdentifier())
  action: DENY
}

rule DeliveryCompanyCanAccessToLimitTime {
  description: "delivery company can read data of limit time"
  participant(p): "org.example.cod.DeliveryCompany"
  operation: READ
  resource(r): "org.example.cod.LimitTime"
  condition: (p.getIdentifier() == r.delivery.getIdentifier())
  action: ALLOW
}

rule DeliveryCanAccessToPackage {
  description: "seller can read data of order"
  participant(p): "org.example.cod.DeliveryCompany"
  operation: READ
  resource(r): "org.example.cod.Package"
  condition: (p.getIdentifier() == r.delivery.getIdentifier())
  action: ALLOW
}
//=====================================================================================================
/*
 * ACCESS CONTROL OF BUYER
 */
//=====================================================================================================
rule BuyerEditTheirProfile {
  description: "buyer only edit their profile"
  participant(p): "org.example.cod.Buyer"
  operation: READ, UPDATE
  resource(r): "org.example.cod.Buyer"
  condition: (r.getIdentifier() == p.getIdentifier())
  action: ALLOW
}

rule BuyerInteractToOrder {
  description: "buyer can create, read order's data"
  participant(p): "org.example.cod.Buyer"
  operation: READ, CREATE
  resource(r): "org.example.cod.Order"
  condition: (r.buyer.getIdentifier() == p.getIdentifier())
  action: ALLOW
}

rule BuyerAccessToAssetHash {
  description: "buyer have permission to access assethash"
  participant(p): "org.example.cod.Buyer"
  operation: READ, CREATE
  resource(r): "org.example.cod.AssetHash"
  condition: (r.buyerId == p.personId)
  action: ALLOW
}

rule BuyerAccessToPackage {
  description: "buyer have permission to access assethash"
  participant(p): "org.example.cod.Buyer"
  operation: READ, UPDATE
  resource(r): "org.example.cod.Package"
  condition: (r.buyer.getIdentifier() == p.getIdentifier())
  action: ALLOW
}

rule BuyerCanReadAsset {
  description: "buyer participant can read asset"
  participant: "org.example.cod.Buyer"
  operation: READ
  resource: "org.example.cod.Assets"
  action: ALLOW
}

rule BuyerSeeOwnHistoryOnly {
  description: "Buyer should be able to see the history of their own transactions only"
  participant(t): "org.example.cod.Buyer"
  operation: READ
  resource(v): "org.hyperledger.composer.system.HistorianRecord"
  condition: (v.participantInvoking.getIdentifier() != t.getIdentifier())
  action: DENY
}

rule BuyerReadLimitTime {
  description: "delivery company can read data of limit time"
  participant(p): "org.example.cod.Buyer"
  operation: READ
  resource(r): "org.example.cod.LimitTime"
  condition: (p.getIdentifier() == r.buyer.getIdentifier())
  action: ALLOW
}

rule BuyerReadHistoryRecord {
  description: "buyer can read history record"
  participant: "org.example.cod.Buyer"
  operation: READ
  resource: "org.example.cod.HistoryRecordVerifyShipper"
  action: ALLOW
}
//=====================================================================================================
/*
 * ACCESS CONTROL OF SHIPPER
 */
//=====================================================================================================
rule ShipperCanSeeAssetHash {
  description: "shipper can read asset hash"
  participant: "org.example.cod.Shipper"
  operation: READ
  resource: "org.example.cod.AssetHash"
  action: ALLOW
}

rule ShipperCanUpdatePackageState {
  description: "shipper can read asset hash"
  participant(p): "org.example.cod.Shipper"
  operation: READ, UPDATE
  resource(r): "org.example.cod.Package"
  condition: (p.company.getIdentifier() == r.delivery.getIdentifier())
  action: ALLOW
}

rule ShipperInteractToLimitTime {
  description: "shipper can read asset hash"
  participant: "org.example.cod.Shipper"
  operation: READ
  resource: "org.example.cod.LimitTime"
  action: ALLOW
}

rule ShipperCreateHistoryRecord {
  description: "shipper can read history record"
  participant: "org.example.cod.Shipper"
  operation: READ, CREATE
  resource: "org.example.cod.HistoryRecordVerifyShipper"
  action: ALLOW
}
//=====================================================================================================
/*
 * ACCESS CONTROL FOR TRANSACTION OF BUYER
 */
//=====================================================================================================
rule BuyerOnlyCreatetrsOrder {
  description: "buyer only access to trsOrder"
  participant: "org.example.cod.Buyer"
  operation: ALL
  resource: "org.example.cod.trsCreateOrder"
  action: ALLOW
}

rule BuyerAccessTotrsVerifyPayment {
  description: "buyer only access to trsOrder"
  participant: "org.example.cod.Buyer"
  operation: ALL
  resource: "org.example.cod.trsVerifyPayment"
  action: ALLOW
}
//=====================================================================================================
/*
 * ACCESS CONTROL FOR TRANSACTION OF SELLER
 */
//=====================================================================================================
rule SellerCannotCreatetrsOrder {
  description: "seller cannot access to trsOrder"
  participant: "org.example.cod.Seller"
  operation: ALL
  resource: "org.example.cod.trsCreateOrder"
  action: DENY
}

rule SellerCreatetrsTransferMoney {
  description: "seller access to trsTransferMoney"
  participant: "org.example.cod.Seller"
  operation: ALL
  resource: "org.example.cod.trsDeposit"
  action: DENY
}

rule SellerAccesTotrsCreatePackage {
  description: "seller access to trsCreatePackage"
  participant: "org.example.cod.Seller"
  operation: ALL
  resource: "org.example.cod.trsCreatePackage"
  action: ALLOW
}

rule SellerCanTakeBackMoney {
  description: "seller can take back money in mortgage account"
  participant(t): "org.example.cod.Seller"
  operation: ALL
  resource(r): "org.example.cod.trsGetBackMoney"
  condition: (t.getIdentifier() == r.time.seller.getIdentifier())
  action: ALLOW
}

rule SellerCanCreatetrsEncryptAsset {
  description: "seller can take back money in mortgage account"
  participant: "org.example.cod.Seller"
  operation: ALL
  resource: "org.example.cod.trsEncryptAsset"
  action: ALLOW
}

//=====================================================================================================
/*
 * ACCESS CONTROL FOR TRANSACTION OF DELIVERY COMPANY
 */
//=====================================================================================================
rule DeliveryCannotCreatetrsOrder {
  description: "delivery cannot access to trsOrder"
  participant: "org.example.cod.DeliveryCompany"
  operation: ALL
  resource: "org.example.cod.trsCreateOrder"
  action: DENY
}

rule DeliveryCreatetrsTransferMoney {
  description: "delivery access to trsTransferMoney"
  participant: "org.example.cod.DeliveryCompany"
  operation: ALL
  resource: "org.example.cod.trsDeposit"
  action: ALLOW
}

/*rule DeliveryCannotCreatetrsVerifyShipper {
  description: "delivery cannot access to trsVerifyShipper"
  participant: "org.example.cod.DeliveryCompany"
  operation: ALL
  resource: "org.example.cod.trsVerifyShipper"
  action: DENY
}*/

rule DeliveryCanTakeBackMoney {
  description: "delivery can take back money in mortgage account"
  participant(t): "org.example.cod.DeliveryCompany"
  operation: ALL
  resource(r): "org.example.cod.trsGetBackMoney"
  condition: (t.getIdentifier() == r.time.delivery.getIdentifier())
  action: ALLOW
}

//=====================================================================================================
/*
 * ACCESS CONTROL FOR TRANSACTION OF SHIPPER
 */
//=====================================================================================================
rule ShipperCannotCreatetrsOrder {
  description: "shipper cannot access to trsOrder"
  participant: "org.example.cod.Shipper"
  operation: ALL
  resource: "org.example.cod.trsCreateOrder"
  action: DENY
}

rule ShipperCannotCreatetrsTransferMoney {
  description: "shipper don't have permission to access to trsTransferMoney"
  participant: "org.example.cod.Shipper"
  operation: ALL
  resource: "org.example.cod.trsDeposit"
  action: DENY
}

rule ShipperCanInteractWithtrsVerifyShipper {
  description: "Shipper can access to trsVerifyShipper"
  participant: "org.example.cod.Shipper"
  operation: ALL
  resource: "org.example.cod.trsVerifyShipper"
  action: ALLOW
}

rule ShipperCanCreateVerifyHistory {
  description: "shipper can create verify history each time they verify order"
  participant(p): "org.example.cod.Shipper"
  operation: READ, CREATE
  resource(r): "org.example.cod.HistoryRecordVerifyShipper"
  condition: (p.getIdentifier() == r.shipper.getIdentifier())
  action: ALLOW
}

rule ShipperCanENCRPYTaCCESS {
  description: "shipper can create verify history each time they verify order"
  participant: "org.example.cod.Shipper"
  operation: ALL
  resource: "org.example.cod.trsEncryptAsset"
  action: ALLOW
}